---
name: Stannum::Constraints::Absence
slug: absence
type: class
files:
- lib/stannum/constraints/absence.rb
parent_path: stannum/constraints
short_description: An absence constraint asserts that the object is nil or empty.
constants:
- name: NEGATED_TYPE
  path: stannum/constraints/absence/negated-type
  slug: negated-type
  inherited: false
- name: TYPE
  path: stannum/constraints/absence/type
  slug: type
  inherited: false
instance_attributes:
- name: options
  read: true
  write: true
  path: stannum/constraints/base/i-options
  slug: options
  inherited: true
instance_methods:
- name: "=="
  path: stannum/constraints/base/i-==
  slug: "=="
  inherited: true
- name: clone
  path: stannum/constraints/base/i-clone
  slug: clone
  inherited: true
- name: does_not_match?
  path: stannum/constraints/base/i-does-not-match?
  slug: does-not-match?
  inherited: true
- name: dup
  path: stannum/constraints/base/i-dup
  slug: dup
  inherited: true
- name: errors_for
  path: stannum/constraints/base/i-errors-for
  slug: errors-for
  inherited: true
- name: initialize
  path: stannum/constraints/base/i-initialize
  slug: initialize
  inherited: true
  constructor: true
- name: match
  path: stannum/constraints/base/i-match
  slug: match
  inherited: true
- name: matches?
  path: stannum/constraints/absence/i-matches?
  slug: matches?
  inherited: false
- name: message
  path: stannum/constraints/base/i-message
  slug: message
  inherited: true
- name: negated_errors_for
  path: stannum/constraints/base/i-negated-errors-for
  slug: negated-errors-for
  inherited: true
- name: negated_match
  path: stannum/constraints/base/i-negated-match
  slug: negated-match
  inherited: true
- name: negated_message
  path: stannum/constraints/base/i-negated-message
  slug: negated-message
  inherited: true
- name: negated_type
  path: stannum/constraints/base/i-negated-type
  slug: negated-type
  inherited: true
- name: type
  path: stannum/constraints/base/i-type
  slug: type
  inherited: true
- name: with_options
  path: stannum/constraints/base/i-with-options
  slug: with-options
  inherited: true
data_path: stannum/constraints/absence
metadata:
  examples:
  - name: Using an Absence constraint
    text: |-
      constraint = Stannum::Constraints::Absence.new

      constraint.matches?(nil) #=> true
      constraint.matches?(Object.new)  #=> false
  - name: Using a Absence constraint with an Array
    text: |-
      constraint.matches?([])        #=> true
      constraint.matches?([1, 2, 3]) #=> false
  - name: Using a Absence constraint with an Hash
    text: |-
      constraint.matches?({})               #=> true
      constraint.matches?({ key: 'value' }) #=> false
constructor: true
inherited_classes:
- name: Stannum::Constraints::Base
  slug: base
  path: stannum/constraints/base
version: '0.4'
