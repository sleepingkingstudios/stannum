---
name: Stannum::Constraints::Format
slug: format
type: class
files:
- lib/stannum/constraints/format.rb
parent_path: stannum/constraints
short_description: A Format constraint asserts the value is a string matching the
  given format.
constants:
- name: NEGATED_TYPE
  path: stannum/constraints/format/negated-type
  slug: negated-type
  inherited: false
- name: TYPE
  path: stannum/constraints/format/type
  slug: type
  inherited: false
instance_attributes:
- name: expected_format
  read: true
  write: false
  path: stannum/constraints/format/i-expected-format
  slug: expected-format
  inherited: false
- name: options
  read: true
  write: true
  path: stannum/constraints/base/i-options
  slug: options
  inherited: true
instance_methods:
- name: "=="
  path: stannum/constraints/base/i-==
  slug: "=="
  inherited: true
- name: clone
  path: stannum/constraints/base/i-clone
  slug: clone
  inherited: true
- name: does_not_match?
  path: stannum/constraints/base/i-does-not-match?
  slug: does-not-match?
  inherited: true
- name: dup
  path: stannum/constraints/base/i-dup
  slug: dup
  inherited: true
- name: errors_for
  path: stannum/constraints/format/i-errors-for
  slug: errors-for
  inherited: false
- name: initialize
  path: stannum/constraints/format/i-initialize
  slug: initialize
  inherited: false
  constructor: true
- name: match
  path: stannum/constraints/base/i-match
  slug: match
  inherited: true
- name: matches?
  path: stannum/constraints/format/i-matches?
  slug: matches?
  inherited: false
- name: message
  path: stannum/constraints/base/i-message
  slug: message
  inherited: true
- name: negated_errors_for
  path: stannum/constraints/base/i-negated-errors-for
  slug: negated-errors-for
  inherited: true
- name: negated_match
  path: stannum/constraints/base/i-negated-match
  slug: negated-match
  inherited: true
- name: negated_message
  path: stannum/constraints/base/i-negated-message
  slug: negated-message
  inherited: true
- name: negated_type
  path: stannum/constraints/base/i-negated-type
  slug: negated-type
  inherited: true
- name: type
  path: stannum/constraints/base/i-type
  slug: type
  inherited: true
- name: with_options
  path: stannum/constraints/base/i-with-options
  slug: with-options
  inherited: true
data_path: stannum/constraints/format
metadata:
  examples:
  - name: Using a Format constraint with a String format.
    text: |-
      format = 'Greetings'
      constraint = Stannum::Constraints::Format.new(format)

      constraint.matches?(nil)                    #=> false
      constraint.matches?('Hello, world')         #=> false
      constraint.matches?('Greetings, programs!') #=> true
  - name: Using a Format constraint with a Regex format.
    text: |-
      format = /\AGreetings/
      constraint = Stannum::Constraints::Format.new(format)

      constraint.matches?(nil)                    #=> false
      constraint.matches?('Hello, world')         #=> false
      constraint.matches?('Greetings, programs!') #=> true
constructor: true
direct_subclasses:
- name: Stannum::Constraints::Uuid
  slug: uuid
  path: stannum/constraints/uuid
inherited_classes:
- name: Stannum::Constraints::Base
  slug: base
  path: stannum/constraints/base
version: '0.4'
